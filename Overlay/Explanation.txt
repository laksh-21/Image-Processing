So, we first take a ROI(region of interest) from the original image.
cols, rows, channels = logo.shape
roi = img[0:cols, 0:rows]

Incase, the logo is not black and white and contains all color channels then convert it to gray first
logo_gray = cv2.cvtColor(src=logo, code=cv2.COLOR_BGR2GRAY)

Now to create the masks:
1. the mask would be the black n white image to seperate the logo from its background,
2. to seperate the colored areas from the background, use the THRESHOLD function and also create an inversed image
    ret, msk = cv2.threshold(src=logo_gray, thresh=150, maxval=255, type=cv2.THRESH_BINARY)
    mask_inv = cv2.bitwise_not(src=msk)
3. we're going to perform the bitwise_and operation on the ROI and the mask so the logo part will be blacked out in the image(background)
    bg = cv2.bitwise_and(roi, roi, mask=msk)
4. also, perform the bitwise_and operartion on logo image and inversed mask to just get the color of the logo on the white part(foreground)
    fg = cv2.bitwise_and(logo, logo, mask=mask_inv)
5. add the background and the foreground
    final = cv2.add(bg, fg)

Now just replace the ROI with the final